name: Ci - Semantic Version

on:
  push:
      branches: [ "feature/devops","main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
        contents: write #required for git push 
        packages: write
   
    steps:
    - name: Print github workspace
      run: |
        echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
        echo "github.workspace = ${{ github.workspace }}"
        echo "pr.ref = ${{github.event.pull_request.head.ref}}"
        echo "github.ref = ${{ github.ref }}"
        echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://npm.pkg.github.com'
        # Defaults to the user or organization that owns the workflow file
        scope: '@vp826425'

    - run: npm i

    - name: Run semantice release
      run: |
          npx semantic-release
      working-directory: ${{ github.workspace }}
      env:
          GITHUB_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

    - name: Print package.json version (before)
      run: |
          echo "package.json version (before): $(jq -r .version package.json)"
      working-directory: ${{ github.workspace }}

    - name: Fetch Latest Commit
      run: |
          git fetch
          git reset --hard origin/main
    - name: Print package.json version (after)
      run: |
          echo "package.json version (after): $(jq -r .version package.json)"
      working-directory: ${{ github.workspace }}

    - name: Build 
      run: |
          npm run build:integration --if-present
      working-directory: ${{ github.workspace }}
      shell: bash

    # - name: Copy a file from root folder to build folder
    #   run: |
    #       echo "github.workspace = ${{ github.workspace }}"
    #       ls -lrt ${{ github.workspace }}
    #       cp package.json './deployments/integration' 

    - name: Print Build Version
      run: |
          echo "Build version: $(jq -r .version package.json)"
      working-directory: ${{ github.workspace }}

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v4
      with:
          name: aa-config
          path: ${{ github.workspace }}/app
       
    # - run: npm run build:integration --if-present
    - uses: actions/upload-artifact@v4
      with:
        name: Build
        path: app
      
    - run: npm publish
      env: 
        NODE_AUTH_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      